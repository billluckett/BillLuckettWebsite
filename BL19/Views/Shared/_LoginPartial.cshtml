@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var appUser = UserManager.GetUserAsync(User).Result;
    var roles = (appUser == null) ? new List<string>() : UserManager.GetRolesAsync(appUser).Result.ToList();
    var returnUrl = Context.Request.Path;
}

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            @if (roles.Contains("Admin"))
            {
                <li>
                    <a asp-area="" asp-controller="Admin" asp-action="Index" style="color:#fe0"><b>ADMIN</b></a>
                </li>
            }
            <li id="li-profile">
                <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                    <span class="glyphicon glyphicon-user" style="vertical-align:text-top;"></span>&nbsp;@UserManager.GetUserName(User)
                </a>
            </li>
            <li id="li-logout"><button type="submit" class="btn btn-link navbar-btn navbar-link">Logout</button></li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li id="li-register"><a asp-area="Identity" asp-page="/Account/Register">Register</a></li>
        <li id="li-login"><a asp-area="Identity" asp-page="/Account/Login" asp-route-returnurl="@returnUrl">Login</a></li>
    </ul>
}